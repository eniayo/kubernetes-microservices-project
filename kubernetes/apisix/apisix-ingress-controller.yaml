apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix-ingress-controller
  namespace: microservices
  labels:
    app.kubernetes.io/instance: apisix
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-controller
    app.kubernetes.io/version: 1.8.0
    helm.sh/chart: ingress-controller-0.14.0
  annotations:
    meta.helm.sh/release-name: apisix
    meta.helm.sh/release-namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: apisix
      app.kubernetes.io/name: ingress-controller
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: apisix
        app.kubernetes.io/name: ingress-controller
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-02-22T23:45:00+08:00"
    spec:
      serviceAccountName: apisix-ingress-controller
      initContainers:
      - name: wait-apisix-admin
        image: busybox:1.28
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - "until nc -z apisix-admin.microservices.svc.cluster.local 9180; do echo waiting for apisix-admin; sleep 2; done"
      containers:
      - name: ingress-controller
        image: apache/apisix-ingress-controller:1.8.3
        imagePullPolicy: IfNotPresent
        command:
        - /ingress-apisix/apisix-ingress-controller
        - ingress
        - --config-path
        - /ingress-apisix/conf/config.yaml
        - --default-apisix-cluster-base-url=http://apisix-admin.microservices.svc.cluster.local:9180/apisix/admin
        - --default-apisix-cluster-admin-key=edd1c9f034335f136f87ad84b625c8f1
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: configuration
          mountPath: /ingress-apisix/conf/config.yaml
          subPath: config.yaml
      volumes:
      - name: configuration
        configMap:
          name: apisix-configmap
          items:
          - key: config.yaml
            path: config.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30